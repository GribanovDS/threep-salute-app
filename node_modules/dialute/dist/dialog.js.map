{"version":3,"file":"dialog.js","sourceRoot":"","sources":["../src/dialog.ts"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:max-classes-per-file */\nimport chalk from 'chalk';\nimport type { Db } from './db/types';\nimport { SberRequest, SberResponse } from './api';\n\nconst Second = 1000;\nconst Minute = Second * 60;\n\nexport type ScriptStep = string | SberResponse | Generator | GeneratorFunction;\n\nexport function dateLog(msg: string) {\n  console.log(`${chalk.cyanBright(new Date().toUTCString())} - ${msg}`);\n}\n\ntype Callback = (s: Session) => Promise<any>;\n\nexport enum Event {\n  CreateSession = 'CREATE_SESSION',\n  DeleteSession = 'DELETE_SESSION',\n}\n\ninterface Hooks {\n  [event: string]: string;\n}\n\nexport class DialogManager {\n  start: any;\n  sessions: any;\n  hooks: { [event in Event]: Callback[] };\n  deleteSessionAfter: number;\n  deleteEachTime: number;\n  static ctxDb: Db;\n\n  constructor(\n    start: GeneratorFunction,\n    optional = {\n      deleteSessionAfter: Minute * 4,\n      deleteEachTime: Minute * 2,\n    }\n  ) {\n    this.start = start;\n    this.sessions = {};\n    this.deleteEachTime = optional.deleteEachTime;\n    this.deleteSessionAfter = optional.deleteSessionAfter;\n    this.hooks = {\n      CREATE_SESSION: [],\n      DELETE_SESSION: [],\n    };\n\n    // Important: setInterval changes context without wrapper function\n    setInterval(() => this.deleteSessions(), this.deleteEachTime);\n  }\n\n  setCtxDb(db: Db) {\n    DialogManager.ctxDb = db;\n    return this;\n  }\n\n  async createCtx(userId: string): Promise<any> {\n    let ctx = {};\n    if (DialogManager.ctxDb) {\n      ctx = await DialogManager.ctxDb.getById(userId) || {};\n    }\n    // @ts-ignore\n    ctx['_id'] = userId;\n    return ctx;\n  }\n\n  async process(request: any): Promise<SberResponse> {\n    if (!(request instanceof SberRequest)) {\n      request = new SberRequest(request);\n    }\n\n    if (!this.sessions.hasOwnProperty(request.userId)) {\n      const ctx = await this.createCtx(request.userId);\n      const newSession = new Session(this.start, request, ctx);\n      for (const hook of this.hooks[Event.CreateSession]) {\n        await hook(newSession);\n      }\n      this.sessions[request.userId] = newSession;\n    }\n    const session = this.sessions[request.userId];\n    session.request.clone(request);\n\n    let rsp: SberResponse;\n    const scriptStep = session.step();\n\n    if (typeof scriptStep === 'string') {\n      rsp = request.buildRsp();\n      rsp.msg = scriptStep;\n    } else if (scriptStep instanceof SberResponse) {\n      rsp = scriptStep;\n    } else if ({}.toString.call(scriptStep) === '[object Generator]') {\n      session.script = scriptStep;\n      rsp = await this.process(request);\n    } else if ({}.toString.call(scriptStep) === '[object GeneratorFunction]') {\n      session.script = scriptStep(session.request, session.ctx);\n      rsp = await this.process(request);\n    } else {\n      dateLog(\n        chalk.redBright(\n          'You have returned unsupported type from your generator'\n        )\n      );\n    }\n\n    if (rsp.end) {\n      delete this.sessions[request.userId];\n    }\n    return rsp;\n  }\n\n  newHook(event: Event, callback: Callback) {\n    this.hooks[event].push(callback);\n    return this;\n  }\n\n  newInterceptor() {\n\n  }\n\n  async deleteSessions() {\n    const len = Object.keys(this.sessions).length;\n    dateLog(chalk.magentaBright(`Total sessions: ${len}`));\n    dateLog(chalk.magentaBright('Deleting unused sessions'));\n\n    let counter = 0;\n    for (const [key, value] of Object.entries(this.sessions)) {\n      const s = (value as Session).lastActive;\n      if (Date.now() - s > this.deleteSessionAfter) {\n        for (const hook of this.hooks[Event.CreateSession]) {\n          await hook(this.sessions[key]);\n        }\n        delete this.sessions[key];\n        counter++;\n      }\n    }\n    dateLog(chalk.magentaBright(`Deleted ${counter} sessions`));\n  }\n}\n\n\nconst ctxHandler = {\n  get(target: any, key: any, receiver: any) {\n    return Reflect.get(target, key, receiver);\n  },\n  set(target: any, key: any, val: any, receiver: any) {\n    const newVal = Reflect.set(target, key, val, receiver);\n    if (DialogManager.ctxDb) {\n      DialogManager.ctxDb.setById(target._id, receiver);\n    }\n    return newVal\n  }\n}\n\nexport class Session {\n  start: any;\n  script: Generator<SberRequest, string | SberResponse | Function>;\n  ctx: any;\n  request: SberRequest; // The link for updating object\n  lastActive: number;\n\n  constructor(start: any, request: SberRequest, ctx: Object) {\n    this.start = start;\n    this.request = request;\n    this.ctx = new Proxy(ctx, ctxHandler);\n    this.script = start(request, this.ctx);\n    this.lastActive = Date.now();\n  }\n\n  step(): ScriptStep {\n    this.lastActive = Date.now();\n    const { value, done } = this.script.next();\n    if (done) {\n      dateLog(chalk.bgYellow('Script ended. Reloading'));\n      this.script = this.start(this.request, this.ctx);\n      return this.step();\n    }\n    return value as ScriptStep;\n  }\n}\n"]}