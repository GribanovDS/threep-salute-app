{"version":3,"file":"tests.js","sourceRoot":"","sources":["../src/tests.ts"],"names":[],"mappings":";;;AAAA,qCAA4D;AAC5D,qCAAmC;AAInC,yBAAyB;AACzB,iBAAiB;AACjB,oBAAoB;AACpB,4BAA4B;AAC5B,MAAM;AAEN,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAc,EAAE,GAAQ;IACvC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IAChB,MAAM,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;IACzB,OAAO,IAAI,EAAE;QACX,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;QAChB,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAC3B,yEAAyE;QACzE,MAAM,GAAG,CAAC;QACV,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;QAEZ,MAAM,GAAG,CAAC,QAAQ,EAAE,CAAC;QACrB,MAAM,CAAC,CAAC;KACT;AACH,CAAC;AAED,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAc;IACxB,MAAM,cAAc,CAAC;IACrB,MAAM,gBAAgB,CAAC;IACvB,MAAM,CAAC,CAAC;AACV,CAAC;AAED,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAc,EAAE,GAAQ;IAClC,MAAM,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC;IACpB,MAAM,wBAAwB,GAAG,EAAE,CAAC;IACpC,MAAM,gBAAgB,CAAC;IACvB,MAAM,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;AACvB,CAAC;AAED,MAAM,EAAE,GAAG,IAAI,sBAAa,CAAC,MAA2B,CAAC;IACvD,gBAAgB;KACf,OAAO,CAAC,cAAK,CAAC,aAAa,EAAE,CAAM,CAAC,EAAC,EAAE,0DACtC,OAAA,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA,GAAA,CAC9C,CAAC;AAEJ,MAAM,CAAC,GAAG,IAAI,gBAAO,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;AAE5C,gEAAgE;AAChE,CAAC,CAAC,KAAK,EAAE,CAAC","sourcesContent":["import { ScriptStep, DialogManager, Event } from './dialog';\nimport { Dialute } from './server';\nimport { SberRequest, SberResponse } from './api';\nimport { Mongo } from './db';\n\n// const db = new Mongo({\n//   uri: `test`,\n//   dbName: 'test',\n//   collectionName: 'test',\n// });\n\nfunction* script(r: SberRequest, ctx: any): ScriptStep {\n  console.log(ctx)\n  const rsp = r.buildRsp();\n  while (true) {\n    rsp.msg = r.msg;\n    rsp.kbrd = ['1', '2', '3'];\n    // yield r.nlu.lemmaIntersection(['привет', 'салют', 'дело']).toString();\n    yield rsp;\n    ctx.num = 2;\n\n    yield rsp.estimate();\n    yield a;\n  }\n}\n\nfunction* a(r: SberRequest): ScriptStep {\n  yield 'Hello from a';\n  yield 'Hello from a 2';\n  yield b;\n}\n\nfunction* b(r: SberRequest, ctx: any): ScriptStep {\n  const { num } = ctx;\n  yield `Hello from b, num is ${num}`;\n  yield 'Hello from b 2';\n  yield script(r, ctx);\n}\n\nconst dm = new DialogManager(script as GeneratorFunction)\n  // .setCtxDb(db)\n  .newHook(Event.CreateSession, async s =>\n    console.log('New session!', s.request.userId)\n  );\n\nconst d = new Dialute({ dm, port: '8000' });\n\n// const d = Dialute.fromEntrypoint(script as GeneratorFunction)\nd.start();\n"]}